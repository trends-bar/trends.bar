type TrendGridLayout {
    i: String
    x: Int
    y: Int
    w: Int
    h: Int
    moved: Boolean
    static: Boolean
}

type TrendLayout {
    _id: ID!
    name: String
    trendId: String
    username: String
    granularity: Int
    cols: Int
    width: Int
    gridLayout: [TrendGridLayout]
    gridContent: [ContentWidgetTitle]
}

interface ContentWidgetBase {
    type: String!
    i: String!
}

type ContentWidgetTitle implements ContentWidgetBase {
    type: String!
    i: String!
    title: String
    subTitle: String
}

union ContentWidget = ContentWidgetTitle

input ContentWidgetTitleInput {
    type: String!
    i: String!
    title: String
    subTitle: String
}

input TrendGridLayoutInput {
    i: String
    x: Int
    y: Int
    w: Int
    h: Int
    moved: Boolean
    static: Boolean
}

input TrendLayoutInput {
    name: String
    trendId: String
    username: String
    granularity: Int
    cols: Int
    width: Int
    gridLayout: [TrendGridLayoutInput!]
    gridContent: [ContentWidgetTitleInput!]
}

type Query {
    trendLayouts(trendId: String!, username:String!): [TrendLayout]
    trendLayout(layoutName: String!, trendId: String!, username:String!): TrendLayout
}

type Mutation {
    upsertTrendLayout(trendLayout: TrendLayoutInput): TrendLayout
}
